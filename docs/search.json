[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "AB322 Land-2-Sea Tutorial",
    "section": "",
    "text": "UNIS course AB-322 is titled “Fluxes of Nutrients, Energy and Contaminants from Sea to Land”, but equally important are fluxes moving in the opposite direction: from land to sea.\nHere, we have compiled an R tutorial focused on 5 Arctic rivers and their role in transporting nutrients, carbon and contaminants from thawing watersheds to coastal waters in Isfjorden, Svalbard.\n\n\nThis tutorial requires you to have R and Rstudio installed on your computer. Go to the R website and follow the links for downloading.\nR for Windows: https://cran.r-project.org/bin/windows/base/.\nR for Macs: https://cran.r-project.org/bin/macosx/.\nR-studio: https://www.rstudio.com/products/rstudio/download/\nOnce you have Rstudio installed, click on File/New File/Rscript. We will use this new Rscript file for loading, cleaning and plotting catchment and river water chemistry data throughout this tutorial.\n\n\n\nIn addition, you will need to install several R packages. You can do this by copying and running the following lines of code in your new Rscript.\n# Packages for data preparation and plotting\ninstall.packages(“tidyverse”)\ninstall.packages(“lubridate”)\ninstall.packages(“vegan”)\n\n# Packages for spatial data analysis\ninstall.packages(“sf”)\ninstall.packages(“terra”)\ninstall.packages(“units”)\ninstall.packages(“tmap”)    \ninstall.packages(“corrplot”)    \n# Check that the libraries have been properly installed\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(vegan)\nlibrary(sf)\nlibrary(terra)\nlibrary(units)\nlibrary(tmap)   \nlibrary(corrplot)"
  },
  {
    "objectID": "preface.html",
    "href": "preface.html",
    "title": "Preface",
    "section": "",
    "text": "Climate change impacts on cross-ecosystem transport of solutes from Arctic watersheds to coastal areas is driven both by changes in discharge, and in water chemistry. Discharge is increasing for many Arctic rivers due to increases in precipitation, glacial melt and permafrost thaw (Shiklomanov et al. 2021). In addition, receding glaciers and increased vegetative biomass ‘Arctic Greening’, are leading to changes in river water chemistry, with implications for receiving coastal waters (Wrona et al. 2016).\nIn this tutorial, we will explore two cross-boundary fluxes of carbon, nutrients and contaminants: (1) from watershed soils to rivers, and (2) from rivers to sea.\n\n\n\n\n\n\nWater chemistry data used in this tutorial include published data (McGovern et al. 2020) and generated data for teaching purposes.\n\n\n\n\n\n\n\nCoch, Caroline, Scott F Lamoureux, Christian Knoblauch, Isabell Eischeid, Michael Fritz, Jaroslav Obu, and Hugues Lantuit. 2018. “Summer Rainfall Dissolved Organic Carbon, Solute, and Sediment Fluxes in a Small Arctic Coastal Catchment on Herschel Island (Yukon Territory, Canada).” Arctic Science 4 (4): 750–80.\n\n\nGiesbrecht, Ian JW, Suzanne E Tank, Gordon W Frazer, Eran Hood, Santiago G Gonzalez Arriola, David E Butman, David V D’Amore, David Hutchinson, Allison Bidlack, and Ken P Lertzman. 2022. “Watershed Classification Predicts Streamflow Regime and Organic Carbon Dynamics in the Northeast Pacific Coastal Temperate Rainforest.” Global Biogeochemical Cycles 36 (2): e2021GB007047.\n\n\nHalbach, Laura, Mikko Vihtakari, Pedro Duarte, Alistair Everett, Mats A Granskog, Haakon Hop, Hanna M Kauko, et al. 2019. “Tidewater Glaciers and Bedrock Characteristics Control the Phytoplankton Growth Environment in a Fjord in the Arctic.” Frontiers in Marine Science 6: 254.\n\n\nHuser, Brian J, Martyn N Futter, Daniel Bogan, John E Brittain, Joseph M Culp, Willem Goedkoop, Iliada Gribovskaya, et al. 2022. “Spatial and Temporal Variation in Arctic Freshwater Chemistry—Reflecting Climate-Induced Landscape Alterations and a Changing Template for Biodiversity.” Freshwater Biology 67 (1): 14–29.\n\n\nMcGovern, Maeve, Alexey K Pavlov, Anne Deininger, Mats A Granskog, Eva Leu, Janne E Søreide, and Amanda E Poste. 2020. “Terrestrial Inputs Drive Seasonality in Organic Matter and Nutrient Biogeochemistry in a High Arctic Fjord System (Isfjorden, Svalbard).” Frontiers in Marine Science 7: 542563.\n\n\nShiklomanov, Alexander, Stephen Déry, Mikhail Tretiakov, Daqing Yang, Dmitry Magritsky, Alex Georgiadi, and Wenqing Tang. 2021. “River Freshwater Flux to the Arctic Ocean.” In Arctic Hydrology, Permafrost and Ecosystems, 703–38. Springer.\n\n\nWrona, Frederick J, Margareta Johansson, Joseph M Culp, Alan Jenkins, Johanna Mård, Isla H Myers-Smith, Terry D Prowse, Warwick F Vincent, and Philip A Wookey. 2016. “Transitions in Arctic Ecosystems: Ecological Implications of a Changing Hydrological Regime.” Journal of Geophysical Research: Biogeosciences 121 (3): 650–74."
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "Introduction",
    "section": "",
    "text": "The rivers investigated in this tutorial include Adventelva, Sassenelva, DeGeerelva, Gipsdalselva and Ebbaelva. These rivers drain watersheds with varying morphology and vegetation cover and all flow into the Isfjorden system on the west coast of Svalbard."
  },
  {
    "objectID": "river_chemistry.html",
    "href": "river_chemistry.html",
    "title": "\n1  River Water Chemistry\n",
    "section": "",
    "text": "# Packages for data preparation and plotting\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(vegan)"
  },
  {
    "objectID": "river_chemistry.html#load-datafiles",
    "href": "river_chemistry.html#load-datafiles",
    "title": "\n1  River Water Chemistry\n",
    "section": "\n1.2 Load datafiles",
    "text": "1.2 Load datafiles\n\n# Load datafile\nwater_chem <- read_csv(\"datafiles/AB322_Water_Chemistry.csv\")"
  },
  {
    "objectID": "river_chemistry.html#data-preparation",
    "href": "river_chemistry.html#data-preparation",
    "title": "\n1  River Water Chemistry\n",
    "section": "\n1.3 Data Preparation",
    "text": "1.3 Data Preparation\n\n\n\n\n\n\nTip\n\n\n\nShortcut for the pipe (%>%): shift-command-m (mac); shift-control-m (windows)\n\n\n\nwater_chem <- water_chem %>% \n  mutate(date = dmy(date)) %>%\n  mutate(year = year(date),month = month(date, label = TRUE), day = day(date)) %>% \n  rename(\"DOC\" = \"DOC_mg_L\", \n         \"POC\" = \"POC_mg_L\", \n         \"NO2_NO3\" = \"NO2_NO3_umol_L\", \n         \"PO4\" = \"PO4_umol_L\", \n         \"SiO2\" = \"SiO2_umol_L\", \n         \"SPM\" = \"SPM_mg_L\", \n         \"dTotHg\" = \"dTotHg_ng_L\", \n         \"pTotHg\" = \"pTotHg_ng_L\")\n\n# Arrange month factor chronologically\nwater_chem$month <- factor(water_chem$month, levels = c(\"May\", \"Jun\", \"Aug\", \"Sep\"))"
  },
  {
    "objectID": "river_chemistry.html#explore-water-chemistry-data",
    "href": "river_chemistry.html#explore-water-chemistry-data",
    "title": "\n1  River Water Chemistry\n",
    "section": "\n1.4 Explore water chemistry data",
    "text": "1.4 Explore water chemistry data\n\n1.4.1 Carbon\n\n# TOC, DOC, POC\nP1 <- water_chem %>% \n  dplyr::select(watershed, month, DOC, POC) %>% \n  pivot_longer(cols= -c(watershed, month), names_to = \"Carbon\", values_to= 'Concentration') %>% \n  ggplot(aes(x = month, y = Concentration, color = month)) + \n  geom_point(size = 2, aes = 0.8) +\n  scale_color_manual(values=c(\"cadetblue3\", \"cadetblue4\", \"darksalmon\",  \"plum4\")) +\n  facet_grid(Carbon~watershed, scales= \"free\") +\n  ylab(\"Organic carbon (mg C/L)\") + \n  theme_light() +\n  scale_y_log10() + xlab(NULL) +\n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1), \n        text = element_text(size=15))\nP1\n\n\n\n\n\n1.4.2 Nutrients\n\n# NO3_NO2, SiO2, PO4\n\nP2 <- water_chem %>% \n  dplyr::select(watershed, month, NO2_NO3, SiO2, PO4) %>% drop_na() %>% \n  pivot_longer(cols= -c(watershed, month), names_to = \"Nutrient\", values_to= 'Concentration') %>% \n  ggplot(aes(x = month, y = Concentration, color = month)) + \n  geom_point(size = 2, aes= 0.8) +\n  scale_color_manual(values=c(\"cadetblue3\", \"cadetblue4\", \"darksalmon\",  \"plum4\")) +\n  facet_grid(Nutrient ~ watershed, scales = \"free\") +\n  ylab(\"Concentration (umol/L)\") + \n  theme_light() +\n  scale_y_log10() + xlab(NULL) +\n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1), \n        text = element_text(size=15))\n\nP2\n\n\n\n\n\n1.4.3 Contaminants\n\n# Hg (Particulate and dissolved)\n\nP3 <- water_chem %>% \n  dplyr::select(watershed, month, dTotHg, pTotHg) %>% drop_na() %>% \n  pivot_longer(cols= -c(watershed, month), names_to = \"Mercury\", values_to= 'Concentration') %>% \n  ggplot(aes(x = month, y = Concentration, color = month)) + \n  geom_point(size = 2, aes = 0.8) +\n  scale_color_manual(values=c(\"cadetblue3\", \"cadetblue4\", \"darksalmon\",  \"plum4\")) +\n  facet_grid(Mercury ~ watershed, scales = \"free\") +\n  ylab(\"Concentration (ng/L)\") + \n  xlab(\"watershed\") +\n  theme_light() +\n  scale_y_log10() + xlab(NULL) +\n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1), \n        text = element_text(size = 15))\n\nP3\n\n\n\n\n\n# Hg per gram Carbon\n\nP4 <- water_chem %>%\n  mutate(dTotHg_gC = dTotHg/DOC) %>% \n  mutate(pTotHg_gC = pTotHg/POC) %>%\n  dplyr::select(watershed, month, dTotHg_gC, pTotHg_gC) %>% drop_na() %>% \n  pivot_longer(cols= -c(watershed, month), names_to = \"Mercury\", values_to= 'Concentration') %>% \n  ggplot(aes(x = month, y = Concentration, color = month)) + \n  geom_point(size = 2, aes = 0.8) +\n  scale_color_manual(values=c(\"cadetblue3\", \"cadetblue4\", \"darksalmon\",  \"plum4\")) +\n  facet_grid(Mercury ~ watershed, scales = \"free\") +\n  ylab(\"Concentration (ng/gC)\") + \n  xlab(\"watershed\") +\n  theme_light() +\n  scale_y_log10() + xlab(NULL) +\n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1), text = element_text(size=15))\n\nP4"
  },
  {
    "objectID": "spatial_analysis.html",
    "href": "spatial_analysis.html",
    "title": "\n2  Spatial Analysis\n",
    "section": "",
    "text": "# Load libraries\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(terra)\nlibrary(units)\nlibrary(tmap)"
  },
  {
    "objectID": "spatial_analysis.html#load-the-datasets",
    "href": "spatial_analysis.html#load-the-datasets",
    "title": "\n2  Spatial Analysis\n",
    "section": "\n2.1 Load the datasets",
    "text": "2.1 Load the datasets\n\n# Load vector datasets\nwater <- read_sf(\"Datafiles/spatial_data/water.shp\")\nsvalbard <- read_sf(\"Datafiles/spatial_data/svalbard.shp\")\nwatershed <- read_sf(\"Datafiles/spatial_data/watershed5.shp\")\nstations <- read_sf(\"Datafiles/spatial_data/sampling_stations.shp\")\n\n#Load raster datasets\ndem <- rast(\"Datafiles/spatial_data/dem.tif\")\nndvi <- rast(\"Datafiles/spatial_data/NDVI.tif\")\nveg_map <- rast(\"Datafiles/spatial_data/vegetation.tif\")"
  },
  {
    "objectID": "spatial_analysis.html#plotting-the-vector-data-and-preparing-it-for-analysis",
    "href": "spatial_analysis.html#plotting-the-vector-data-and-preparing-it-for-analysis",
    "title": "\n2  Spatial Analysis\n",
    "section": "\n2.2 Plotting the vector data and preparing it for analysis",
    "text": "2.2 Plotting the vector data and preparing it for analysis\n\n2.2.1 Plotting the data\n\n# Plot the watershed with baseR functions\nplot(st_geometry(watershed))\n\n\n\n\n\n# We can use Tmap for more elaborate maps\n# We can switch between plot mode and view mode\n# tmap_mode(mode = c(\"plot\", \"view\"))\n\ntmap_mode(mode = c(\"plot\"))\n\ntm_shape(watershed) +\ntm_polygons() +\ntm_shape(svalbard) +\ntm_polygons(col = \"beige\") +\ntm_graticules() +\ntm_shape(watershed) +\ntm_polygons(col = \"name\", title='Watershed') +\ntm_shape(water) +\ntm_fill(col = \"blue\") +\ntm_shape(stations) +\ntm_dots(size = 0.25) +\ntm_scale_bar(breaks = c(0, 10, 20)) +\ntm_compass(position = c(\"left\", \"top\")) +\ntm_layout(bg.color = \"lightblue\")\n\n\n\n\n\n2.2.2 Preparing the vector data to match coodinate systems and extents\n\n# Assessing coordinate systems\ncrs(watershed, describe= \"TRUE\")\n\n                   name authority  code area         extent\n1 WGS 84 / UTM zone 33N      EPSG 32633 <NA> NA, NA, NA, NA\n\ncrs(stations, describe= \"TRUE\")\n\n    name authority code area         extent\n1 WGS 84      EPSG 4326 <NA> NA, NA, NA, NA\n\n# Project the spatial file\nstations_projected = st_transform(stations, \"EPSG:32633\")\n\n# Subset for one of the watersheds\n\nwatershed = subset(watershed, name == \"Adventelva\")\nstation = subset(stations_projected, Station == \"Adventelva\")"
  },
  {
    "objectID": "spatial_analysis.html#generating-new-data-layers-from-existing-data",
    "href": "spatial_analysis.html#generating-new-data-layers-from-existing-data",
    "title": "\n2  Spatial Analysis\n",
    "section": "\n2.3 Generating new data layers from existing data",
    "text": "2.3 Generating new data layers from existing data\n\n2.3.1 Calculate the distance to each sampling station\n\n# Create a raster (30m resolution) based on the shape of the watershed\nr <- rast(watershed, res=30)\nr_wat <- rasterize(watershed, r)\n\n# Calculate the distance for each pixel to the sampling station\nr_dis <- distance(r_wat, station)\n\n\n|---------|---------|---------|---------|\n=========================================\n                                          \n\n# Crop to the extent of the watershed shapefile\nr_dis <- crop(r_dis, vect(watershed))\nr_dis <- mask(r_dis, vect(watershed))\n\n# Give it a nicer name\ndistance <- r_dis\n\n# Look at the result\nplot(distance)\nplot(st_geometry(watershed), add=TRUE)\n\n\n\n\n\n2.3.2 Calculate the slope\n\n# Crop the DEM to the extent of the watersheds to speed up processing\ndem <- crop(dem, vect(watershed))\ndem <- mask(dem, vect(watershed))\n\nplot(dem)\n\n\n\n# Calculate slope from the DEM\nslope <- terrain(dem, v = \"slope\", neighbors = 8, unit = \"degrees\")\n\nplot(slope)\n\n\n\n\n\n2.3.3 NDVI\n\n# Crop the NDVI to the extent of the watersheds to speed up processing\nndvi <- crop(ndvi, vect(watershed))\nndvi <- mask(ndvi, vect(watershed))\n\n# NDVI\nndvi\n\nclass       : SpatRaster \ndimensions  : 100, 159, 1  (nrow, ncol, nlyr)\nresolution  : 231.6564, 231.6564  (x, y)\nextent      : 512927.5, 549760.8, 8666709, 8689875  (xmin, xmax, ymin, ymax)\ncoord. ref. : WGS 84 / UTM zone 33N (EPSG:32633) \nsource(s)   : memory\nvarname     : NDVI \nname        :      NDVI \nmin value   : -124.2333 \nmax value   :  756.8000 \n\n# Change the range to be between -1 and 1\nndvi <- ndvi/1000\n\nplot(ndvi)\n\n\n\n\n\n2.3.4 Reclassify the vegetation map\n\n# We can plot the map to look at it\nplot(veg_map)\n\n\n\n# Crop the veg map to the extent of the watersheds to speed up processing\nveg_map <- crop(veg_map, vect(watershed))\nveg_map <- mask(veg_map, vect(watershed))\n\n# Reclassification matrix\nrclmat<-read.table(\"datafiles/spatial_data/rclmat.txt\",header=TRUE,row.names=1)\n\n# Reclassify the map to simples classes with help of the matrix\nveg_rcl <- classify(veg_map, rclmat, include.lowest=TRUE)\n\n# Now we can look at the results\nplot(veg_rcl)"
  },
  {
    "objectID": "spatial_analysis.html#overlaying-the-data-to-export",
    "href": "spatial_analysis.html#overlaying-the-data-to-export",
    "title": "\n2  Spatial Analysis\n",
    "section": "\n2.4 Overlaying the data to export",
    "text": "2.4 Overlaying the data to export\n\n2.4.1 Preparing the overlay\n\n# Project the raster files to vegetation classes map, this is necessary for overlays\nndvi_prj <- project(ndvi, veg_rcl)\nslope_prj <- project(slope, veg_rcl)\ndistance_prj <- project(distance, veg_rcl)\n\n\n2.4.2 Exploring the raster data\n\n# Explore the raster layers\ntmap_mode(mode = c(\"view\"))\ncls<-c(\"blue\", \"lightblue\", \"white\")\n\ntmap_options(check.and.fix = TRUE)\n\ntm_shape(watershed) +\n  tm_borders() +\ntm_shape(station) +\n  tm_dots()+\ntm_shape(slope_prj) +\n  tm_raster(alpha = 0.4, title='Slope - degrees') +\n  tm_shape(distance_prj) +\n  tm_raster(style = \"fixed\", breaks = c(0,2000,10000,40000), palette=cls,  title='Distance to Station')\n\n\n\n\n\n\n\n2.4.3 Overlay files and extract as dataframe\n\n# We stack all the layers on top of each other\nstack <- c(veg_rcl, ndvi_prj, slope_prj, distance_prj)\n\n# We extract all the stacked data for each watershed, this produces a long table with a row for each column\nwatershed_df <- terra::extract(stack, vect(watershed))\n\n\n2.4.4 Cleaning the dataframe\n\n# We select the columsn we are interested in and rename them\nwatershed_df <- dplyr::select(watershed_df, vegetation,\n                              ndvi = NDVI,\n                              slope, distance = layer)\n# Rename vegetation classes\nwatershed_df <- mutate(watershed_df,\n                     vegetation = case_when(\n                       vegetation == 2 ~ 'water',\n                       vegetation == 3 ~ 'shadow',\n                       vegetation == 4 ~ 'glacier',\n                       vegetation == 5 ~ 'barren',\n                       vegetation == 6 ~ 'heath',\n                       vegetation == 7 ~ 'moss'))\n\n# Change vegetation classes to factors\nwatershed_df$vegetation<-as.factor(watershed_df$vegetation)\n\n# We can save the file\n# write_csv(watershed_df, file = \"datafiles/spatial_data/watershed_dataframe.csv\")"
  },
  {
    "objectID": "spatial_analysis.html#calculate-area-of-watershed",
    "href": "spatial_analysis.html#calculate-area-of-watershed",
    "title": "\n2  Spatial Analysis\n",
    "section": "\n2.5 Calculate area of watershed",
    "text": "2.5 Calculate area of watershed\n\n# Define the spatial unit\nwatershed$watershed_area <- set_units(st_area(watershed), \"km2\")\n\n# Drop the geometry to obtain a dataframe\nwatershed_info = st_drop_geometry(watershed)\n\n# Change the area to numeric format\nwatershed_info$watershed_area <- as.numeric(watershed_info$watershed_area)\n\n# Select and rename columns that are interesting to keep\nwatershed_info <- dplyr::select(watershed_info, watershed = name, watershed_km2 = watershed_area)\n\n# Save the file if you want to:\n# write_csv(watershed_info, file = \"Datafiles/spatial_data/watershed_info.csv\")"
  },
  {
    "objectID": "watershed_comparison.html#exploring-the-watershed-dataframe",
    "href": "watershed_comparison.html#exploring-the-watershed-dataframe",
    "title": "\n3  Watershed Comparison\n",
    "section": "\n3.1 Exploring the watershed dataframe",
    "text": "3.1 Exploring the watershed dataframe\n\n3.1.1 Preparing the data\n\n# ggplots\n\n# Load the watershed files\nwatershed_df <- read_csv(\"datafiles/spatial_data/watershed_dataframe.csv\")\nwatershed_info <- read_csv(\"datafiles/spatial_data/watershed_info.csv\")\n\n# We add a column to watershed_df because it makes summaries easier\nwatershed_df$count<-1\n\n# If your computer is slow, you can randomly subset the data\nwatershed_df_sub<-sample_n(watershed_df, 10000)\n\n\n3.1.2 Summarizing the continious variables\n\n# Calculate the mean ndvi, elevation and slope for each catchment\nwatershed_mean <- watershed_df %>%\n  group_by(watershed) %>% \n  summarise_at(c(\"ndvi\", \"slope\"), mean, na.rm = TRUE)\n\n# Calculate the mean ndvi, elevation and slope for each catchment within 1km\nwatershed_mean <- watershed_df %>%\n  filter(distance < 1000) %>%\n  group_by(watershed) %>% \n  summarise_at(c(ndvi_1km=\"ndvi\", slope_1km=\"slope\"), mean, na.rm = TRUE) %>%\n  inner_join(watershed_mean)\n\n# Calculate the mean ndvi, elevation and slope for each catchment within 5km\nwatershed_mean <- watershed_df %>%\n  filter(distance < 5000) %>%\n  group_by(watershed) %>% \n  summarise_at(c(ndvi_5km=\"ndvi\", slope_5km=\"slope\"), mean, na.rm = TRUE) %>%\n  inner_join(watershed_mean)\n\n\n3.1.3 Summarizing the ground cover classes\n\n# Count each ground cover class for each watershed and pivot the table\nwatershed_class_proportion <- watershed_df %>%\n  group_by(watershed, vegetation) %>% \n  summarise_at(c(\"count\"), sum, na.rm = TRUE) %>% \n  pivot_wider(names_from = 'vegetation',\n              values_from = 'count')\n\n# Calculate the percentages per vegetation class and watershed\nwatershed_class_proportion <- watershed_class_proportion %>% \n  mutate(total = sum(c_across(where(is.numeric)), na.rm = TRUE)) %>% \n  ungroup() %>% \n  mutate(across(where(is.numeric), ~ . / total*100))\n\n# Drop the columns that we don't need\nwatershed_class_proportion <- watershed_class_proportion %>% \n  dplyr::select(-shadow, -water, -total)\n\n\n3.1.4 Exploring the ground cover classes\n\n# Change to long format for ground cover classes to be factors\nwatershed_class_proportion_pivot<-pivot_longer(watershed_class_proportion,\n            cols = -watershed,\n            names_to = 'class',\n            values_to = 'percentage')\n\n# Plot the data with GGPLOT\nggplot(data = watershed_class_proportion_pivot, aes(x = watershed, y = percentage, fill = class)) +\n  geom_bar(stat=\"identity\")\n\n\n\n# Change the axis and from stacked to parallel\nggplot(data = watershed_class_proportion_pivot, aes(x = class, y = percentage, fill = watershed)) +\n  geom_bar(stat=\"identity\", color=\"black\", position = position_dodge())\n\n\n\n\n\n3.1.5 Join tables and export\n\n# Use join to join the continious and categorical data into 1\nwatershed_info_joined <- inner_join(watershed_class_proportion, watershed_mean)\nwatershed_info_joined <- inner_join(watershed_info_joined, watershed_info)\n\nwrite_csv(watershed_info_joined,\"datafiles/spatial_data/watershed_info_joined.csv\")"
  },
  {
    "objectID": "watershed_comparison.html#relationships-to-river-water-chemistry",
    "href": "watershed_comparison.html#relationships-to-river-water-chemistry",
    "title": "\n3  Watershed Comparison\n",
    "section": "\n3.2 Relationships to river water chemistry",
    "text": "3.2 Relationships to river water chemistry\n\n# Load water chem dataframe\nwater_chem <- read_csv(\"datafiles/AB322_Water_Chemistry.csv\") %>% \n  mutate(date = dmy(date)) %>%\n  mutate(year = year(date), month = month(date, label = TRUE), day = day(date)) %>% \n  rename(\"DOC\" = \"DOC_mg_L\", \n         \"POC\" = \"POC_mg_L\", \n         \"NO2_NO3\" = \"NO2_NO3_umol_L\", \n         \"PO4\" = \"PO4_umol_L\", \n         \"SiO2\" = \"SiO2_umol_L\", \n         \"SPM\" = \"SPM_mg_L\", \n         \"dTotHg\" = \"dTotHg_ng_L\", \n         \"pTotHg\" = \"pTotHg_ng_L\")\n\n# Join\nwatershed_info_joined <- read_csv(\"datafiles/spatial_data/watershed_info_joined.csv\") \ncatchment_chemistry <- full_join(watershed_info_joined, water_chem)\n\n\n3.2.1 Correlation plots\n\n# Corrplot for overview of all relationships\n\ncatchment_chemistry2 <- catchment_chemistry %>% \n  dplyr::select(-c(watershed, date, sample_id, year, month, day, `NA`)) \n\ncatchment_chemistry3 <- cor(catchment_chemistry2, method = c(\"spearman\"))\ncorrplot(catchment_chemistry3)\n\n\n\ncorrplot(catchment_chemistry3, method = 'square', order = 'FPC', type = 'lower', diag = FALSE)\n\n\n\n\n\n3.2.2 Scatter plots\n\n# Further exploration\n\n catchment_chemistry %>% \n  ggplot(aes(x=slope, y = DOC, color = watershed)) +\n  geom_point() +\n  facet_wrap(~month, scales = \"free\")\n\n\n\ncatchment_chemistry %>% \n  ggplot(aes(x=slope_5km, y = SPM, color = watershed)) +\n  geom_point() +\n  facet_wrap(~month, scales = \"free\")\n\n\n\ncatchment_chemistry %>% \n  ggplot(aes(x=ndvi, y = NO2_NO3, color = watershed)) +\n  geom_point() +\n  facet_wrap(~month, scales = \"free\")\n\n\n\ncatchment_chemistry %>% \n  ggplot(aes(x=glacier, y = SiO2, color = watershed)) +\n  geom_point() +\n  facet_wrap(~month, scales = \"free\")"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Coch, Caroline, Scott F Lamoureux, Christian Knoblauch, Isabell\nEischeid, Michael Fritz, Jaroslav Obu, and Hugues Lantuit. 2018.\n“Summer Rainfall Dissolved Organic Carbon, Solute, and Sediment\nFluxes in a Small Arctic Coastal Catchment on Herschel Island (Yukon\nTerritory, Canada).” Arctic Science 4 (4): 750–80.\n\n\nGiesbrecht, Ian JW, Suzanne E Tank, Gordon W Frazer, Eran Hood, Santiago\nG Gonzalez Arriola, David E Butman, David V D’Amore, David Hutchinson,\nAllison Bidlack, and Ken P Lertzman. 2022. “Watershed\nClassification Predicts Streamflow Regime and Organic Carbon Dynamics in\nthe Northeast Pacific Coastal Temperate Rainforest.” Global\nBiogeochemical Cycles 36 (2): e2021GB007047.\n\n\nHalbach, Laura, Mikko Vihtakari, Pedro Duarte, Alistair Everett, Mats A\nGranskog, Haakon Hop, Hanna M Kauko, et al. 2019. “Tidewater\nGlaciers and Bedrock Characteristics Control the Phytoplankton Growth\nEnvironment in a Fjord in the Arctic.” Frontiers in Marine\nScience 6: 254.\n\n\nHuser, Brian J, Martyn N Futter, Daniel Bogan, John E Brittain, Joseph M\nCulp, Willem Goedkoop, Iliada Gribovskaya, et al. 2022. “Spatial\nand Temporal Variation in Arctic Freshwater Chemistry—Reflecting\nClimate-Induced Landscape Alterations and a Changing Template for\nBiodiversity.” Freshwater Biology 67 (1): 14–29.\n\n\nMcGovern, Maeve, Alexey K Pavlov, Anne Deininger, Mats A Granskog, Eva\nLeu, Janne E Søreide, and Amanda E Poste. 2020. “Terrestrial\nInputs Drive Seasonality in Organic Matter and Nutrient Biogeochemistry\nin a High Arctic Fjord System (Isfjorden, Svalbard).”\nFrontiers in Marine Science 7: 542563.\n\n\nShiklomanov, Alexander, Stephen Déry, Mikhail Tretiakov, Daqing Yang,\nDmitry Magritsky, Alex Georgiadi, and Wenqing Tang. 2021. “River\nFreshwater Flux to the Arctic Ocean.” In Arctic Hydrology,\nPermafrost and Ecosystems, 703–38. Springer.\n\n\nWrona, Frederick J, Margareta Johansson, Joseph M Culp, Alan Jenkins,\nJohanna Mård, Isla H Myers-Smith, Terry D Prowse, Warwick F Vincent, and\nPhilip A Wookey. 2016. “Transitions in Arctic Ecosystems:\nEcological Implications of a Changing Hydrological Regime.”\nJournal of Geophysical Research: Biogeosciences 121 (3):\n650–74."
  }
]